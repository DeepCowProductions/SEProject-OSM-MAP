//                            Row {
//                                width: parent.width
//                                height: parent.height * 0.5
//                                padding: 1
//                                spacing: 4
//                                Rectangle{
//                                    width: parent.width * 0.4
//                                    height: parent.height
//                                    Text{
//                                        anchors.leftMargin: 10
//                                        anchors.fill: parent
//                                        verticalAlignment: Text.AlignVCenter
//                                        horizontalAlignment: Text.AlignVCenter
//                                        text: "Position: "
//                                        color: "navy"
//                                        font.pointSize: 7
//                                    }
//                                }
//                                Rectangle{
//                                    width: parent.width * 0.6
//                                    height: parent.height
//                                    Text{
//                                        property string info
//                                        id: infoPanelPos
//                                        anchors.leftMargin: 10
//                                        anchors.fill: parent
//                                        verticalAlignment: Text.AlignVCenter
//                                        horizontalAlignment: Text.AlignVCenter
//                                        text: info + " "
//                                        color: "black"
//                                        font.pointSize: 7
//                                    }
//                                }
//                            }

elemente nach eventuellem QGeoLocation fix




FolderListModel {
    id: folderOffline
    folder: "file://"+mapInstance.plugin.parameters[0].value
}
//    FolderListModel {
//        id: folderCache
////        folder: "file://"+mapInstance.plugin.parameters[1].value
//    }


//    function getSizeCache() {
//        console.log("call cache size calc")
//        var c = 0
//        for (var i = 0; i <folderCache.count; i++  ){
//            c = c + folderCache.get (i ,"fileSize")
//        }
//        return  Math.round(((c / 1024) /1024) * 100) / 100
//    }


//    function getSizeOffline() {
//        console.log("call offline size calc")
//        var c = 0
//        for (var i = 0; i <folderOffline.count; i++  ){
//            c = c + folderOffline.get (i ,"fileSize")
//        }
//        return  Math.round(((c / 1024) /1024) * 100) / 100
//    }
